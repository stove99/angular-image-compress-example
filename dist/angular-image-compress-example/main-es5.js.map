{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","compressor","fb","form","group","ratio","quality","valueChanges","pipe","subscribe","value","img","compress","data","compressed","convertImg","convertImgSize","size","target","files","file","reader","FileReader","onload","event","result","imgSize","byteCount","readAsDataURL","console","log","compressFile","bytes","window","atob","split","buffer","ArrayBuffer","length","blob","Uint8Array","i","charCodeAt","Blob","type","selectFile","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","<div class=\"container\">\n  <form class=\"my-3\" [formGroup]=\"form\">\n    <div class=\"form-row\">\n      <div class=\"col\">\n        <label>비율 {{ form.value.ratio }}%</label>\n        <input\n          type=\"range\"\n          class=\"custom-range\"\n          min=\"0\"\n          max=\"200\"\n          step=\"1\"\n          formControlName=\"ratio\"\n        />\n      </div>\n      <div class=\"col\">\n        <label>퀄리티 {{ form.value.quality }}%</label>\n        <input\n          type=\"range\"\n          class=\"custom-range\"\n          min=\"0\"\n          max=\"200\"\n          step=\"1\"\n          formControlName=\"quality\"\n        />\n      </div>\n    </div>\n\n    <div class=\"form-row\">\n      <div class=\"col\">\n        <label>이미지 파일</label>\n        <div class=\"custom-file\">\n          <input\n            type=\"file\"\n            class=\"custom-file-input\"\n            (change)=\"selectFile($event)\"\n          />\n          <label class=\"custom-file-label\" accept=\".jpg,.png,.jpeg\"\n            >Choose file</label\n          >\n        </div>\n      </div>\n    </div>\n  </form>\n\n  <div *ngIf=\"img\" class=\"card\" style=\"width: 18rem;\">\n    <img [src]=\"img\" class=\"card-img-top\" alt=\"원본\" />\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">원본 이미지</h5>\n      <p class=\"card-text\">File Size : {{ imgSize | number: \"1.2-2\" }}MB</p>\n    </div>\n  </div>\n\n  <div *ngIf=\"convertImg\" class=\"my-3 p-3 border shadow\">\n    <p>File Size : {{ convertImgSize | number: \"1.2-2\" }}MB</p>\n    <img [src]=\"convertImg\" alt=\"압축\" />\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NgxImageCompressService } from 'ngx-image-compress';\nimport { FormBuilder } from '@angular/forms';\n\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n    constructor(\n        private compressor: NgxImageCompressService,\n        private fb: FormBuilder\n    ) {\n        this.form.valueChanges.pipe(\n            debounceTime(500)\n        ).subscribe(async (value) => {\n            if (this.img) {\n                const compressed = await this.compress({ data: this.img, ...value });\n\n                this.convertImg = compressed.img;\n                this.convertImgSize = compressed.size;\n            }\n        });\n    }\n\n    form = this.fb.group({\n        ratio: [100],\n        quality: [50]\n    });\n\n    img: string;\n\n    imgSize: number;\n\n    convertImg: string;\n\n    convertImgSize: number;\n\n    selectFile(e: any) {\n        if (e.target.files) {\n            const file = e.target.files[0];\n            const reader = new FileReader();\n\n            reader.onload = async (event: any) => {\n                // base64 image\n                this.img = event.target.result;\n                this.imgSize = this.compressor.byteCount(this.img) / (1024 * 1024);\n\n                const compressed = await this.compress({ data: this.img, ...this.form.value });\n                this.convertImg = compressed.img;\n                this.convertImgSize = compressed.size;\n\n                // blob 또는 File 로 변환해서 업로드 처리하면 됨\n                // base64 => blob\n                // const blob = this.toBlob(compressed.img);\n                // console.log('blob', blob);\n\n                // base64 => File\n                // const f = new File([compressed.img], file.name, { type: 'image/jpeg' });\n                // console.log('file', f);\n            };\n\n            reader.readAsDataURL(file);\n        }\n    }\n\n    async compress({ data, ratio, quality }: { data: string, ratio?: number, quality?: number }) {\n        console.log('ratio : ', ratio, ' quality : ', quality);\n        const result = await this.compressor.compressFile(data, -1, ratio, quality);\n\n        return { img: result, size: this.compressor.byteCount(result) / (1024 * 1024) };\n    }\n\n    toBlob(data) {\n        const bytes = window.atob(data.split(',')[1]);\n        const buffer = new ArrayBuffer(bytes.length);\n        const blob = new Uint8Array(buffer);\n\n        for (let i = 0; i < bytes.length; i++) {\n            blob[i] = bytes.charCodeAt(i);\n        }\n\n        return new Blob([blob], { type: 'image/jpeg' });\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\nimport { NgxImageCompressService } from 'ngx-image-compress';\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        BrowserModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    providers: [\n        NgxImageCompressService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}